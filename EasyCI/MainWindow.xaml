<Window x:Class="EasyCI.EasyCiMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EasyCI"
        mc:Ignorable="d"
        Height="600" Width="1000"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource BackgroundBrush}"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="True"
        BorderThickness="1"
        BorderBrush="{DynamicResource BorderBrush}">
    <Window.Resources>
        <Style x:Key="WindowButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource WindowButtonHoverBrush}" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource WindowButtonPressedBrush}" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#F1707A"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Barra de título personalizada -->
        <Border x:Name="TitleBar" Grid.Row="0" Background="{DynamicResource PrimaryBrush}" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="EasyCI - Automação de Integração Contínua"
                           Foreground="White"
                           VerticalAlignment="Center"
                           Margin="10,0,0,0"
                           FontSize="12"/>

                <Button x:Name="BtnMinimize"
                        Grid.Column="1"
                        Style="{StaticResource WindowButtonStyle}"
                        Content="&#xE921;"
                        Click="BtnMinimize_Click"/>

                <Button x:Name="BtnMaximize"
                        Grid.Column="2"
                        Style="{StaticResource WindowButtonStyle}"
                        Content="&#xE922;"
                        Click="BtnMaximize_Click"/>

                <Button x:Name="BtnClose"
                        Grid.Column="3"
                        Style="{StaticResource CloseButtonStyle}"
                        Content="&#xE8BB;"
                        Click="BtnClose_Click"/>
            </Grid>
        </Border>

        <!-- Cabeçalho -->
        <Border Background="{DynamicResource PrimaryBrush}" Grid.Row="1" Height="70">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Margin="20,10">
                    <TextBlock Text="EasyCI" FontSize="24" FontWeight="Bold" Foreground="White"/>
                    <TextBlock Text="Automação de Integração Contínua com Docker" FontSize="14" Foreground="White" Opacity="0.8"/>
                </StackPanel>

                <!-- Botão de Alternar Tema -->
                <Button x:Name="BtnToggleTheme" Grid.Column="1" Margin="0,0,20,0"
                        Click="BtnToggleTheme_Click" VerticalAlignment="Center"
                        Background="Transparent" BorderThickness="0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xE793;" FontFamily="Segoe MDL2 Assets" FontSize="16"
                                   Foreground="White" VerticalAlignment="Center"/>
                        <TextBlock Text="Alternar Tema" Margin="5,0,0,0"
                                   Foreground="White" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </Grid>
        </Border>

        <!-- Conteúdo Principal -->
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
            <Grid Background="{DynamicResource BackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Seção de Boas-vindas -->
                <Border Grid.Row="0" Style="{DynamicResource CardStyle}" Margin="20,20,20,10">
                    <StackPanel>
                        <TextBlock Text="Bem-vindo ao EasyCI" FontSize="20" FontWeight="SemiBold" Margin="0,0,0,10" Foreground="{DynamicResource TextPrimaryBrush}"/>
                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,15" Foreground="{DynamicResource TextPrimaryBrush}">
                            Esta aplicação permite automatizar processos de integração contínua, conectando seus repositórios Git
                            com containers Docker para execução de builds e testes automatizados.
                        </TextBlock>
                        <TextBlock Text="Comece cadastrando seus repositórios Git e containers Docker." FontWeight="SemiBold" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    </StackPanel>
                </Border>

                <!-- Cards de Funcionalidades -->
                <UniformGrid Grid.Row="1" Columns="2" Margin="10,0,10,20">
                    <!-- Card de Repositórios Git -->
                    <Border Style="{DynamicResource CardStyle}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                                <TextBlock Text="&#xE718;" FontFamily="Segoe MDL2 Assets" FontSize="24" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                                <TextBlock Text="Repositórios Git" FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" Foreground="{DynamicResource TextPrimaryBrush}"/>
                            </StackPanel>
                            <TextBlock TextWrapping="Wrap" Margin="0,0,0,15" Foreground="{DynamicResource TextPrimaryBrush}">
                                Cadastre e gerencie seus repositórios Git para monitoramento e automação de builds.
                            </TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="BtnCadastrarGit" Content="Cadastrar Repositório" Style="{DynamicResource CardButtonStyle}" Click="BtnCadastrarGit_Click"/>
                                <Button x:Name="BtnListarGit" Content="Listar Repositórios" Style="{DynamicResource CardButtonStyle}" Margin="10,0,0,0" Click="BtnListarGit_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Card de Containers Docker -->
                    <Border Style="{DynamicResource CardStyle}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                                <TextBlock Text="&#xE7B8;" FontFamily="Segoe MDL2 Assets" FontSize="24" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                                <TextBlock Text="Containers Docker" FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" Foreground="{DynamicResource TextPrimaryBrush}"/>
                            </StackPanel>
                            <TextBlock TextWrapping="Wrap" Margin="0,0,0,15" Foreground="{DynamicResource TextPrimaryBrush}">
                                Configure containers Docker para executar seus builds e testes automatizados.
                            </TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="BtnCadastrarDocker" Content="Cadastrar Container" Style="{DynamicResource CardButtonStyle}" Click="BtnCadastrarDocker_Click"/>
                                <Button x:Name="BtnListarDocker" Content="Listar Containers" Style="{DynamicResource CardButtonStyle}" Margin="10,0,0,0" Click="BtnListarDocker_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Card de Projetos CI -->
                    <Border Style="{DynamicResource CardStyle}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                                <TextBlock Text="&#xE9D9;" FontFamily="Segoe MDL2 Assets" FontSize="24" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                                <TextBlock Text="Projetos CI" FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" Foreground="{DynamicResource TextPrimaryBrush}"/>
                            </StackPanel>
                            <TextBlock TextWrapping="Wrap" Margin="0,0,0,15" Foreground="{DynamicResource TextPrimaryBrush}">
                                Associe repositórios Git com containers Docker para criar pipelines de integração contínua.
                            </TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="BtnCriarProjeto" Content="Criar Projeto CI" Style="{DynamicResource CardButtonStyle}" Click="BtnCriarProjeto_Click"/>
                                <Button x:Name="BtnListarProjetos" Content="Listar Projetos" Style="{DynamicResource CardButtonStyle}" Margin="10,0,0,0" Click="BtnListarProjetos_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Card de Monitoramento -->
                    <Border Style="{DynamicResource CardStyle}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                                <TextBlock Text="&#xE9D2;" FontFamily="Segoe MDL2 Assets" FontSize="24" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                                <TextBlock Text="Monitoramento" FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" Foreground="{DynamicResource TextPrimaryBrush}"/>
                            </StackPanel>
                            <TextBlock TextWrapping="Wrap" Margin="0,0,0,15" Foreground="{DynamicResource TextPrimaryBrush}">
                                Acompanhe o status dos seus projetos de integração contínua em tempo real.
                            </TextBlock>
                            <Button x:Name="BtnMonitoramento" Content="Acessar Monitoramento" Style="{DynamicResource CardButtonStyle}" Click="BtnMonitoramento_Click"/>
                        </StackPanel>
                    </Border>
                </UniformGrid>
            </Grid>
        </ScrollViewer>
    </Grid>
</Window>
